//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Christian\LangC_Capstone\LangC_HolderFolder\LangC_SourceCode\LangC_Capstone\Grammars\AL_Grammar.g4 by ANTLR 4.1-SNAPSHOT
namespace LangC_Capstone.Grammars {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AL_GrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.1-SNAPSHOT")]
public interface IAL_GrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] AL_GrammarParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.variableInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableInitialization([NotNull] AL_GrammarParser.VariableInitializationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.formalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameter([NotNull] AL_GrammarParser.FormalParameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] AL_GrammarParser.ExpressionListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.statementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementExpression([NotNull] AL_GrammarParser.StatementExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] AL_GrammarParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] AL_GrammarParser.BlockStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] AL_GrammarParser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.variableDeclarationID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationID([NotNull] AL_GrammarParser.VariableDeclarationIDContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.mainProgram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMainProgram([NotNull] AL_GrammarParser.MainProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.forUpdate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForUpdate([NotNull] AL_GrammarParser.ForUpdateContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] AL_GrammarParser.VariableDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.enhancedForControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnhancedForControl([NotNull] AL_GrammarParser.EnhancedForControlContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] AL_GrammarParser.PrimaryContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] AL_GrammarParser.FormalParameterListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclaration([NotNull] AL_GrammarParser.MethodDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.programDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramDeclaration([NotNull] AL_GrammarParser.ProgramDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpression([NotNull] AL_GrammarParser.ParExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchLabel([NotNull] AL_GrammarParser.SwitchLabelContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.variableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarators([NotNull] AL_GrammarParser.VariableDeclaratorsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] AL_GrammarParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodBody([NotNull] AL_GrammarParser.MethodBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameters([NotNull] AL_GrammarParser.FormalParametersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] AL_GrammarParser.PrimitiveTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] AL_GrammarParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] AL_GrammarParser.ConstantExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.forControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForControl([NotNull] AL_GrammarParser.ForControlContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInit([NotNull] AL_GrammarParser.ForInitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] AL_GrammarParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_GrammarParser.switchBlockStatementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchBlockStatementGroup([NotNull] AL_GrammarParser.SwitchBlockStatementGroupContext context);
}
} // namespace LangC_Capstone.Grammars
