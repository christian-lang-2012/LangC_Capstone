//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Christian\LangC_Capstone\LangC_HolderFolder\LangC_SourceCode\LangC_Capstone\AL_CombinedGrammar.g4 by ANTLR 4.1-SNAPSHOT
namespace LangC_Capstone {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AL_CombinedGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.1-SNAPSHOT")]
public interface IAL_CombinedGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] AL_CombinedGrammarParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.variableInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableInitialization([NotNull] AL_CombinedGrammarParser.VariableInitializationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.formalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameter([NotNull] AL_CombinedGrammarParser.FormalParameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] AL_CombinedGrammarParser.ExpressionListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.statementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementExpression([NotNull] AL_CombinedGrammarParser.StatementExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] AL_CombinedGrammarParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] AL_CombinedGrammarParser.BlockStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] AL_CombinedGrammarParser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.variableDeclarationID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationID([NotNull] AL_CombinedGrammarParser.VariableDeclarationIDContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.mainProgram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMainProgram([NotNull] AL_CombinedGrammarParser.MainProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.forUpdate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForUpdate([NotNull] AL_CombinedGrammarParser.ForUpdateContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] AL_CombinedGrammarParser.VariableDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.enhancedForControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnhancedForControl([NotNull] AL_CombinedGrammarParser.EnhancedForControlContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] AL_CombinedGrammarParser.PrimaryContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] AL_CombinedGrammarParser.FormalParameterListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclaration([NotNull] AL_CombinedGrammarParser.MethodDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.programDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramDeclaration([NotNull] AL_CombinedGrammarParser.ProgramDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpression([NotNull] AL_CombinedGrammarParser.ParExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchLabel([NotNull] AL_CombinedGrammarParser.SwitchLabelContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.variableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarators([NotNull] AL_CombinedGrammarParser.VariableDeclaratorsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] AL_CombinedGrammarParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodBody([NotNull] AL_CombinedGrammarParser.MethodBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameters([NotNull] AL_CombinedGrammarParser.FormalParametersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] AL_CombinedGrammarParser.PrimitiveTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] AL_CombinedGrammarParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] AL_CombinedGrammarParser.ConstantExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.forControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForControl([NotNull] AL_CombinedGrammarParser.ForControlContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInit([NotNull] AL_CombinedGrammarParser.ForInitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] AL_CombinedGrammarParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AL_CombinedGrammarParser.switchBlockStatementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchBlockStatementGroup([NotNull] AL_CombinedGrammarParser.SwitchBlockStatementGroupContext context);
}
} // namespace LangC_Capstone
