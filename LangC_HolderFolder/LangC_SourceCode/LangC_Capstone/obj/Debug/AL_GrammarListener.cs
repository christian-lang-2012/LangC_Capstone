//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Christian\LangC_Capstone\LangC_HolderFolder\LangC_SourceCode\LangC_Capstone\Grammars\AL_Grammar.g4 by ANTLR 4.1-SNAPSHOT
namespace LangC_Capstone.Grammars {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AL_GrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.1-SNAPSHOT")]
public interface IAL_GrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] AL_GrammarParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] AL_GrammarParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableInitialization([NotNull] AL_GrammarParser.VariableInitializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableInitialization([NotNull] AL_GrammarParser.VariableInitializationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.formalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameter([NotNull] AL_GrammarParser.FormalParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.formalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameter([NotNull] AL_GrammarParser.FormalParameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] AL_GrammarParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] AL_GrammarParser.ExpressionListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.statementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementExpression([NotNull] AL_GrammarParser.StatementExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.statementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementExpression([NotNull] AL_GrammarParser.StatementExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] AL_GrammarParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] AL_GrammarParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStatement([NotNull] AL_GrammarParser.BlockStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStatement([NotNull] AL_GrammarParser.BlockStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] AL_GrammarParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] AL_GrammarParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableDeclarationID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationID([NotNull] AL_GrammarParser.VariableDeclarationIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableDeclarationID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationID([NotNull] AL_GrammarParser.VariableDeclarationIDContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.mainProgram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMainProgram([NotNull] AL_GrammarParser.MainProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.mainProgram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMainProgram([NotNull] AL_GrammarParser.MainProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.forUpdate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForUpdate([NotNull] AL_GrammarParser.ForUpdateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.forUpdate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForUpdate([NotNull] AL_GrammarParser.ForUpdateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] AL_GrammarParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] AL_GrammarParser.VariableDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.enhancedForControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnhancedForControl([NotNull] AL_GrammarParser.EnhancedForControlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.enhancedForControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnhancedForControl([NotNull] AL_GrammarParser.EnhancedForControlContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] AL_GrammarParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] AL_GrammarParser.PrimaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameterList([NotNull] AL_GrammarParser.FormalParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameterList([NotNull] AL_GrammarParser.FormalParameterListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclaration([NotNull] AL_GrammarParser.MethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclaration([NotNull] AL_GrammarParser.MethodDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.programDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramDeclaration([NotNull] AL_GrammarParser.ProgramDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.programDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramDeclaration([NotNull] AL_GrammarParser.ProgramDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParExpression([NotNull] AL_GrammarParser.ParExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParExpression([NotNull] AL_GrammarParser.ParExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchLabel([NotNull] AL_GrammarParser.SwitchLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchLabel([NotNull] AL_GrammarParser.SwitchLabelContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarators([NotNull] AL_GrammarParser.VariableDeclaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarators([NotNull] AL_GrammarParser.VariableDeclaratorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] AL_GrammarParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] AL_GrammarParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodBody([NotNull] AL_GrammarParser.MethodBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodBody([NotNull] AL_GrammarParser.MethodBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameters([NotNull] AL_GrammarParser.FormalParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameters([NotNull] AL_GrammarParser.FormalParametersContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] AL_GrammarParser.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] AL_GrammarParser.PrimitiveTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] AL_GrammarParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] AL_GrammarParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] AL_GrammarParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] AL_GrammarParser.ConstantExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.forControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForControl([NotNull] AL_GrammarParser.ForControlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.forControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForControl([NotNull] AL_GrammarParser.ForControlContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInit([NotNull] AL_GrammarParser.ForInitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInit([NotNull] AL_GrammarParser.ForInitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] AL_GrammarParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] AL_GrammarParser.LiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.switchBlockStatementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchBlockStatementGroup([NotNull] AL_GrammarParser.SwitchBlockStatementGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.switchBlockStatementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchBlockStatementGroup([NotNull] AL_GrammarParser.SwitchBlockStatementGroupContext context);
}
} // namespace LangC_Capstone.Grammars
