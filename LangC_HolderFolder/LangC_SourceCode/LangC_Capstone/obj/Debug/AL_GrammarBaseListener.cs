//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Christian\LangC_Capstone\LangC_HolderFolder\LangC_SourceCode\LangC_Capstone\Grammars\AL_Grammar.g4 by ANTLR 4.1-SNAPSHOT
namespace LangC_Capstone.Grammars {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAL_GrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.1-SNAPSHOT")]
public partial class AL_GrammarBaseListener : IAL_GrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] AL_GrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] AL_GrammarParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableInitialization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableInitialization([NotNull] AL_GrammarParser.VariableInitializationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableInitialization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableInitialization([NotNull] AL_GrammarParser.VariableInitializationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.formalParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameter([NotNull] AL_GrammarParser.FormalParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.formalParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameter([NotNull] AL_GrammarParser.FormalParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] AL_GrammarParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] AL_GrammarParser.ExpressionListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.statementExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementExpression([NotNull] AL_GrammarParser.StatementExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.statementExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementExpression([NotNull] AL_GrammarParser.StatementExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] AL_GrammarParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] AL_GrammarParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatement([NotNull] AL_GrammarParser.BlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatement([NotNull] AL_GrammarParser.BlockStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] AL_GrammarParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] AL_GrammarParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableDeclarationID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationID([NotNull] AL_GrammarParser.VariableDeclarationIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableDeclarationID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationID([NotNull] AL_GrammarParser.VariableDeclarationIDContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.mainProgram"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMainProgram([NotNull] AL_GrammarParser.MainProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.mainProgram"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMainProgram([NotNull] AL_GrammarParser.MainProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.forUpdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForUpdate([NotNull] AL_GrammarParser.ForUpdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.forUpdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForUpdate([NotNull] AL_GrammarParser.ForUpdateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] AL_GrammarParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] AL_GrammarParser.VariableDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.enhancedForControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnhancedForControl([NotNull] AL_GrammarParser.EnhancedForControlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.enhancedForControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnhancedForControl([NotNull] AL_GrammarParser.EnhancedForControlContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary([NotNull] AL_GrammarParser.PrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary([NotNull] AL_GrammarParser.PrimaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] AL_GrammarParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] AL_GrammarParser.FormalParameterListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] AL_GrammarParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] AL_GrammarParser.MethodDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.programDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgramDeclaration([NotNull] AL_GrammarParser.ProgramDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.programDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgramDeclaration([NotNull] AL_GrammarParser.ProgramDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.parExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParExpression([NotNull] AL_GrammarParser.ParExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.parExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParExpression([NotNull] AL_GrammarParser.ParExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.switchLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchLabel([NotNull] AL_GrammarParser.SwitchLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.switchLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchLabel([NotNull] AL_GrammarParser.SwitchLabelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.variableDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarators([NotNull] AL_GrammarParser.VariableDeclaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.variableDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarators([NotNull] AL_GrammarParser.VariableDeclaratorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] AL_GrammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] AL_GrammarParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodBody([NotNull] AL_GrammarParser.MethodBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodBody([NotNull] AL_GrammarParser.MethodBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.formalParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameters([NotNull] AL_GrammarParser.FormalParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.formalParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameters([NotNull] AL_GrammarParser.FormalParametersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveType([NotNull] AL_GrammarParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveType([NotNull] AL_GrammarParser.PrimitiveTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] AL_GrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] AL_GrammarParser.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] AL_GrammarParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] AL_GrammarParser.ConstantExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.forControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForControl([NotNull] AL_GrammarParser.ForControlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.forControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForControl([NotNull] AL_GrammarParser.ForControlContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.forInit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInit([NotNull] AL_GrammarParser.ForInitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.forInit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInit([NotNull] AL_GrammarParser.ForInitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] AL_GrammarParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] AL_GrammarParser.LiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AL_GrammarParser.switchBlockStatementGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchBlockStatementGroup([NotNull] AL_GrammarParser.SwitchBlockStatementGroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AL_GrammarParser.switchBlockStatementGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchBlockStatementGroup([NotNull] AL_GrammarParser.SwitchBlockStatementGroupContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace LangC_Capstone.Grammars
